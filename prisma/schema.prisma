// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Citizen {
  id    String  @id @default(uuid())
  email String  @unique 
  name  String 
  surname String
  password String
  role Role @relation(fields: [roleId], references: [id])
  roleId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  Comment Comment[]
    messages Message[]
  sentInvites    Invite[] @relation("CitizenSentInvites")
  receivedInvites Invite[] @relation("CitizenReceivedInvites")
  }

model Role {
  id  String  @id @default(uuid())
  name String @unique
  citizen Citizen[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Comment {
  id  String  @id @default(uuid())
  title String
  description String
  citizen Citizen @relation(fields: [citizenId], references: [id])
  citizenId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}


model Message {
  id  String  @id @default(uuid())
  title String
  description String
  citizen Citizen @relation(fields: [citizenId], references: [id])
  citizenId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}


model Invite {
  id         String  @id @default(uuid())
  sender     Citizen @relation("CitizenSentInvites", fields: [senderId], references: [id])
  senderId   String
  recever    Citizen @relation("CitizenReceivedInvites", fields: [receverId], references: [id])
  receverId  String
  accept     Boolean
  createdAt  DateTime @default(now())
}